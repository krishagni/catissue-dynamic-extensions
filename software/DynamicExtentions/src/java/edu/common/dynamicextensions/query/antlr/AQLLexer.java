// Generated from AQL.g4 by ANTLR 4.5.1
package edu.common.dynamicextensions.query.antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class AQLLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, WS=3, SELECT=4, WHERE=5, NTHCHILD=6, BETWEEN=7, DATE_FMT=8, 
		MTHS_BTWN=9, YRS_BTWN=10, CURR_DATE=11, MINS_BTWN=12, DATE_RANGE=13, COUNT=14, 
		CCOUNT=15, SUM=16, CSUM=17, MIN=18, MAX=19, AVG=20, DISTINCT=21, HAVING=22, 
		ORDER=23, ORD_DIR=24, LIMIT=25, CROSSTAB=26, CONCAT=27, CONCAT_WS=28, 
		OR=29, AND=30, PAND=31, NOT=32, ROUND=33, SQL=34, LP=35, RP=36, MOP=37, 
		SOP=38, UOP=39, BOOL=40, OP=41, INT=42, FLOAT=43, YEAR=44, MONTH=45, DAY=46, 
		DIGIT=47, ID=48, FIELD=49, SLITERAL=50, ESC=51, ARITH_OP=52, ERROR=53, 
		QUOTE=54;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "WS", "SELECT", "WHERE", "NTHCHILD", "BETWEEN", "DATE_FMT", 
		"MTHS_BTWN", "YRS_BTWN", "CURR_DATE", "MINS_BTWN", "DATE_RANGE", "COUNT", 
		"CCOUNT", "SUM", "CSUM", "MIN", "MAX", "AVG", "DISTINCT", "HAVING", "ORDER", 
		"ORD_DIR", "LIMIT", "CROSSTAB", "CONCAT", "CONCAT_WS", "OR", "AND", "PAND", 
		"NOT", "ROUND", "SQL", "LP", "RP", "MOP", "SOP", "UOP", "BOOL", "OP", 
		"INT", "FLOAT", "YEAR", "MONTH", "DAY", "DIGIT", "ID", "FIELD", "SLITERAL", 
		"ESC", "ARITH_OP", "ERROR", "SGUTS", "QUOTE"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "','", "'as'", null, "'select'", "'where'", "'nthchild'", "'between'", 
		"'date_format'", "'months_between'", "'years_between'", "'current_date'", 
		"'minutes_between'", "'date_range'", "'count'", "'c_count'", "'sum'", 
		"'c_sum'", "'min'", "'max'", "'avg'", "'distinct'", "'having'", "'order by'", 
		null, "'limit'", "'crosstab'", "'concat'", "'concat_ws'", "'or'", "'and'", 
		"'pand'", "'not'", "'round'", "'sql'", "'('", "')'", null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, "'\"'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, "WS", "SELECT", "WHERE", "NTHCHILD", "BETWEEN", "DATE_FMT", 
		"MTHS_BTWN", "YRS_BTWN", "CURR_DATE", "MINS_BTWN", "DATE_RANGE", "COUNT", 
		"CCOUNT", "SUM", "CSUM", "MIN", "MAX", "AVG", "DISTINCT", "HAVING", "ORDER", 
		"ORD_DIR", "LIMIT", "CROSSTAB", "CONCAT", "CONCAT_WS", "OR", "AND", "PAND", 
		"NOT", "ROUND", "SQL", "LP", "RP", "MOP", "SOP", "UOP", "BOOL", "OP", 
		"INT", "FLOAT", "YEAR", "MONTH", "DAY", "DIGIT", "ID", "FIELD", "SLITERAL", 
		"ESC", "ARITH_OP", "ERROR", "QUOTE"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public AQLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "AQL.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\28\u021b\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\3\2\3\2\3\3\3\3\3\3\3\4\6\4x\n"+
		"\4\r\4\16\4y\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3"+
		"\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b"+
		"\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3"+
		"\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3"+
		"\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f"+
		"\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3"+
		"\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16"+
		"\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20"+
		"\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23"+
		"\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26"+
		"\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30"+
		"\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31\5\31\u0131"+
		"\n\31\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33"+
		"\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35"+
		"\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3 \3 \3 "+
		"\3 \3 \3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3$\3$\3%\3%\3&"+
		"\3&\3&\3&\3&\3&\3&\3&\5&\u0179\n&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'"+
		"\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3"+
		"\'\3\'\5\'\u0197\n\'\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3"+
		"(\3(\3(\5(\u01ac\n(\3)\3)\3)\3)\3)\3)\3)\3)\3)\5)\u01b7\n)\3*\3*\3*\3"+
		"*\3*\3*\3*\3*\3*\3*\3*\3*\5*\u01c5\n*\3+\5+\u01c8\n+\3+\6+\u01cb\n+\r"+
		"+\16+\u01cc\3,\5,\u01d0\n,\3,\6,\u01d3\n,\r,\16,\u01d4\3,\3,\6,\u01d9"+
		"\n,\r,\16,\u01da\3-\6-\u01de\n-\r-\16-\u01df\3-\3-\3.\6.\u01e5\n.\r.\16"+
		".\u01e6\3.\3.\3/\6/\u01ec\n/\r/\16/\u01ed\3/\3/\3\60\3\60\3\61\3\61\7"+
		"\61\u01f6\n\61\f\61\16\61\u01f9\13\61\3\62\3\62\5\62\u01fd\n\62\3\62\3"+
		"\62\3\62\3\62\7\62\u0203\n\62\f\62\16\62\u0206\13\62\3\63\3\63\3\63\3"+
		"\63\3\64\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67\7\67\u0215\n\67\f\67"+
		"\16\67\u0218\13\67\38\38\2\29\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13"+
		"\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61"+
		"\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61"+
		"a\62c\63e\64g\65i\66k\67m\2o8\3\2\13\5\2\13\f\17\17\"\"\4\2>>@@\4\2[["+
		"{{\4\2OOoo\4\2FFff\5\2C\\aac|\7\2\62;AAC\\aac|\4\2$$^^\5\2,-//\61\61\u0233"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3"+
		"\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2"+
		"\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2"+
		"U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3"+
		"\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2o\3\2\2"+
		"\2\3q\3\2\2\2\5s\3\2\2\2\7w\3\2\2\2\t}\3\2\2\2\13\u0084\3\2\2\2\r\u008a"+
		"\3\2\2\2\17\u0093\3\2\2\2\21\u009b\3\2\2\2\23\u00a7\3\2\2\2\25\u00b6\3"+
		"\2\2\2\27\u00c4\3\2\2\2\31\u00d1\3\2\2\2\33\u00e1\3\2\2\2\35\u00ec\3\2"+
		"\2\2\37\u00f2\3\2\2\2!\u00fa\3\2\2\2#\u00fe\3\2\2\2%\u0104\3\2\2\2\'\u0108"+
		"\3\2\2\2)\u010c\3\2\2\2+\u0110\3\2\2\2-\u0119\3\2\2\2/\u0120\3\2\2\2\61"+
		"\u0130\3\2\2\2\63\u0132\3\2\2\2\65\u0138\3\2\2\2\67\u0141\3\2\2\29\u0148"+
		"\3\2\2\2;\u0152\3\2\2\2=\u0155\3\2\2\2?\u0159\3\2\2\2A\u015e\3\2\2\2C"+
		"\u0162\3\2\2\2E\u0168\3\2\2\2G\u016c\3\2\2\2I\u016e\3\2\2\2K\u0178\3\2"+
		"\2\2M\u0196\3\2\2\2O\u01ab\3\2\2\2Q\u01b6\3\2\2\2S\u01c4\3\2\2\2U\u01c7"+
		"\3\2\2\2W\u01cf\3\2\2\2Y\u01dd\3\2\2\2[\u01e4\3\2\2\2]\u01eb\3\2\2\2_"+
		"\u01f1\3\2\2\2a\u01f3\3\2\2\2c\u01fc\3\2\2\2e\u0207\3\2\2\2g\u020b\3\2"+
		"\2\2i\u020e\3\2\2\2k\u0210\3\2\2\2m\u0216\3\2\2\2o\u0219\3\2\2\2qr\7."+
		"\2\2r\4\3\2\2\2st\7c\2\2tu\7u\2\2u\6\3\2\2\2vx\t\2\2\2wv\3\2\2\2xy\3\2"+
		"\2\2yw\3\2\2\2yz\3\2\2\2z{\3\2\2\2{|\b\4\2\2|\b\3\2\2\2}~\7u\2\2~\177"+
		"\7g\2\2\177\u0080\7n\2\2\u0080\u0081\7g\2\2\u0081\u0082\7e\2\2\u0082\u0083"+
		"\7v\2\2\u0083\n\3\2\2\2\u0084\u0085\7y\2\2\u0085\u0086\7j\2\2\u0086\u0087"+
		"\7g\2\2\u0087\u0088\7t\2\2\u0088\u0089\7g\2\2\u0089\f\3\2\2\2\u008a\u008b"+
		"\7p\2\2\u008b\u008c\7v\2\2\u008c\u008d\7j\2\2\u008d\u008e\7e\2\2\u008e"+
		"\u008f\7j\2\2\u008f\u0090\7k\2\2\u0090\u0091\7n\2\2\u0091\u0092\7f\2\2"+
		"\u0092\16\3\2\2\2\u0093\u0094\7d\2\2\u0094\u0095\7g\2\2\u0095\u0096\7"+
		"v\2\2\u0096\u0097\7y\2\2\u0097\u0098\7g\2\2\u0098\u0099\7g\2\2\u0099\u009a"+
		"\7p\2\2\u009a\20\3\2\2\2\u009b\u009c\7f\2\2\u009c\u009d\7c\2\2\u009d\u009e"+
		"\7v\2\2\u009e\u009f\7g\2\2\u009f\u00a0\7a\2\2\u00a0\u00a1\7h\2\2\u00a1"+
		"\u00a2\7q\2\2\u00a2\u00a3\7t\2\2\u00a3\u00a4\7o\2\2\u00a4\u00a5\7c\2\2"+
		"\u00a5\u00a6\7v\2\2\u00a6\22\3\2\2\2\u00a7\u00a8\7o\2\2\u00a8\u00a9\7"+
		"q\2\2\u00a9\u00aa\7p\2\2\u00aa\u00ab\7v\2\2\u00ab\u00ac\7j\2\2\u00ac\u00ad"+
		"\7u\2\2\u00ad\u00ae\7a\2\2\u00ae\u00af\7d\2\2\u00af\u00b0\7g\2\2\u00b0"+
		"\u00b1\7v\2\2\u00b1\u00b2\7y\2\2\u00b2\u00b3\7g\2\2\u00b3\u00b4\7g\2\2"+
		"\u00b4\u00b5\7p\2\2\u00b5\24\3\2\2\2\u00b6\u00b7\7{\2\2\u00b7\u00b8\7"+
		"g\2\2\u00b8\u00b9\7c\2\2\u00b9\u00ba\7t\2\2\u00ba\u00bb\7u\2\2\u00bb\u00bc"+
		"\7a\2\2\u00bc\u00bd\7d\2\2\u00bd\u00be\7g\2\2\u00be\u00bf\7v\2\2\u00bf"+
		"\u00c0\7y\2\2\u00c0\u00c1\7g\2\2\u00c1\u00c2\7g\2\2\u00c2\u00c3\7p\2\2"+
		"\u00c3\26\3\2\2\2\u00c4\u00c5\7e\2\2\u00c5\u00c6\7w\2\2\u00c6\u00c7\7"+
		"t\2\2\u00c7\u00c8\7t\2\2\u00c8\u00c9\7g\2\2\u00c9\u00ca\7p\2\2\u00ca\u00cb"+
		"\7v\2\2\u00cb\u00cc\7a\2\2\u00cc\u00cd\7f\2\2\u00cd\u00ce\7c\2\2\u00ce"+
		"\u00cf\7v\2\2\u00cf\u00d0\7g\2\2\u00d0\30\3\2\2\2\u00d1\u00d2\7o\2\2\u00d2"+
		"\u00d3\7k\2\2\u00d3\u00d4\7p\2\2\u00d4\u00d5\7w\2\2\u00d5\u00d6\7v\2\2"+
		"\u00d6\u00d7\7g\2\2\u00d7\u00d8\7u\2\2\u00d8\u00d9\7a\2\2\u00d9\u00da"+
		"\7d\2\2\u00da\u00db\7g\2\2\u00db\u00dc\7v\2\2\u00dc\u00dd\7y\2\2\u00dd"+
		"\u00de\7g\2\2\u00de\u00df\7g\2\2\u00df\u00e0\7p\2\2\u00e0\32\3\2\2\2\u00e1"+
		"\u00e2\7f\2\2\u00e2\u00e3\7c\2\2\u00e3\u00e4\7v\2\2\u00e4\u00e5\7g\2\2"+
		"\u00e5\u00e6\7a\2\2\u00e6\u00e7\7t\2\2\u00e7\u00e8\7c\2\2\u00e8\u00e9"+
		"\7p\2\2\u00e9\u00ea\7i\2\2\u00ea\u00eb\7g\2\2\u00eb\34\3\2\2\2\u00ec\u00ed"+
		"\7e\2\2\u00ed\u00ee\7q\2\2\u00ee\u00ef\7w\2\2\u00ef\u00f0\7p\2\2\u00f0"+
		"\u00f1\7v\2\2\u00f1\36\3\2\2\2\u00f2\u00f3\7e\2\2\u00f3\u00f4\7a\2\2\u00f4"+
		"\u00f5\7e\2\2\u00f5\u00f6\7q\2\2\u00f6\u00f7\7w\2\2\u00f7\u00f8\7p\2\2"+
		"\u00f8\u00f9\7v\2\2\u00f9 \3\2\2\2\u00fa\u00fb\7u\2\2\u00fb\u00fc\7w\2"+
		"\2\u00fc\u00fd\7o\2\2\u00fd\"\3\2\2\2\u00fe\u00ff\7e\2\2\u00ff\u0100\7"+
		"a\2\2\u0100\u0101\7u\2\2\u0101\u0102\7w\2\2\u0102\u0103\7o\2\2\u0103$"+
		"\3\2\2\2\u0104\u0105\7o\2\2\u0105\u0106\7k\2\2\u0106\u0107\7p\2\2\u0107"+
		"&\3\2\2\2\u0108\u0109\7o\2\2\u0109\u010a\7c\2\2\u010a\u010b\7z\2\2\u010b"+
		"(\3\2\2\2\u010c\u010d\7c\2\2\u010d\u010e\7x\2\2\u010e\u010f\7i\2\2\u010f"+
		"*\3\2\2\2\u0110\u0111\7f\2\2\u0111\u0112\7k\2\2\u0112\u0113\7u\2\2\u0113"+
		"\u0114\7v\2\2\u0114\u0115\7k\2\2\u0115\u0116\7p\2\2\u0116\u0117\7e\2\2"+
		"\u0117\u0118\7v\2\2\u0118,\3\2\2\2\u0119\u011a\7j\2\2\u011a\u011b\7c\2"+
		"\2\u011b\u011c\7x\2\2\u011c\u011d\7k\2\2\u011d\u011e\7p\2\2\u011e\u011f"+
		"\7i\2\2\u011f.\3\2\2\2\u0120\u0121\7q\2\2\u0121\u0122\7t\2\2\u0122\u0123"+
		"\7f\2\2\u0123\u0124\7g\2\2\u0124\u0125\7t\2\2\u0125\u0126\7\"\2\2\u0126"+
		"\u0127\7d\2\2\u0127\u0128\7{\2\2\u0128\60\3\2\2\2\u0129\u012a\7f\2\2\u012a"+
		"\u012b\7g\2\2\u012b\u012c\7u\2\2\u012c\u0131\7e\2\2\u012d\u012e\7c\2\2"+
		"\u012e\u012f\7u\2\2\u012f\u0131\7e\2\2\u0130\u0129\3\2\2\2\u0130\u012d"+
		"\3\2\2\2\u0131\62\3\2\2\2\u0132\u0133\7n\2\2\u0133\u0134\7k\2\2\u0134"+
		"\u0135\7o\2\2\u0135\u0136\7k\2\2\u0136\u0137\7v\2\2\u0137\64\3\2\2\2\u0138"+
		"\u0139\7e\2\2\u0139\u013a\7t\2\2\u013a\u013b\7q\2\2\u013b\u013c\7u\2\2"+
		"\u013c\u013d\7u\2\2\u013d\u013e\7v\2\2\u013e\u013f\7c\2\2\u013f\u0140"+
		"\7d\2\2\u0140\66\3\2\2\2\u0141\u0142\7e\2\2\u0142\u0143\7q\2\2\u0143\u0144"+
		"\7p\2\2\u0144\u0145\7e\2\2\u0145\u0146\7c\2\2\u0146\u0147\7v\2\2\u0147"+
		"8\3\2\2\2\u0148\u0149\7e\2\2\u0149\u014a\7q\2\2\u014a\u014b\7p\2\2\u014b"+
		"\u014c\7e\2\2\u014c\u014d\7c\2\2\u014d\u014e\7v\2\2\u014e\u014f\7a\2\2"+
		"\u014f\u0150\7y\2\2\u0150\u0151\7u\2\2\u0151:\3\2\2\2\u0152\u0153\7q\2"+
		"\2\u0153\u0154\7t\2\2\u0154<\3\2\2\2\u0155\u0156\7c\2\2\u0156\u0157\7"+
		"p\2\2\u0157\u0158\7f\2\2\u0158>\3\2\2\2\u0159\u015a\7r\2\2\u015a\u015b"+
		"\7c\2\2\u015b\u015c\7p\2\2\u015c\u015d\7f\2\2\u015d@\3\2\2\2\u015e\u015f"+
		"\7p\2\2\u015f\u0160\7q\2\2\u0160\u0161\7v\2\2\u0161B\3\2\2\2\u0162\u0163"+
		"\7t\2\2\u0163\u0164\7q\2\2\u0164\u0165\7w\2\2\u0165\u0166\7p\2\2\u0166"+
		"\u0167\7f\2\2\u0167D\3\2\2\2\u0168\u0169\7u\2\2\u0169\u016a\7s\2\2\u016a"+
		"\u016b\7n\2\2\u016bF\3\2\2\2\u016c\u016d\7*\2\2\u016dH\3\2\2\2\u016e\u016f"+
		"\7+\2\2\u016fJ\3\2\2\2\u0170\u0171\7k\2\2\u0171\u0179\7p\2\2\u0172\u0173"+
		"\7p\2\2\u0173\u0174\7q\2\2\u0174\u0175\7v\2\2\u0175\u0176\7\"\2\2\u0176"+
		"\u0177\7k\2\2\u0177\u0179\7p\2\2\u0178\u0170\3\2\2\2\u0178\u0172\3\2\2"+
		"\2\u0179L\3\2\2\2\u017a\u017b\7e\2\2\u017b\u017c\7q\2\2\u017c\u017d\7"+
		"p\2\2\u017d\u017e\7v\2\2\u017e\u017f\7c\2\2\u017f\u0180\7k\2\2\u0180\u0181"+
		"\7p\2\2\u0181\u0197\7u\2\2\u0182\u0183\7u\2\2\u0183\u0184\7v\2\2\u0184"+
		"\u0185\7c\2\2\u0185\u0186\7t\2\2\u0186\u0187\7v\2\2\u0187\u0188\7u\2\2"+
		"\u0188\u0189\7\"\2\2\u0189\u018a\7y\2\2\u018a\u018b\7k\2\2\u018b\u018c"+
		"\7v\2\2\u018c\u0197\7j\2\2\u018d\u018e\7g\2\2\u018e\u018f\7p\2\2\u018f"+
		"\u0190\7f\2\2\u0190\u0191\7u\2\2\u0191\u0192\7\"\2\2\u0192\u0193\7y\2"+
		"\2\u0193\u0194\7k\2\2\u0194\u0195\7v\2\2\u0195\u0197\7j\2\2\u0196\u017a"+
		"\3\2\2\2\u0196\u0182\3\2\2\2\u0196\u018d\3\2\2\2\u0197N\3\2\2\2\u0198"+
		"\u0199\7g\2\2\u0199\u019a\7z\2\2\u019a\u019b\7k\2\2\u019b\u019c\7u\2\2"+
		"\u019c\u019d\7v\2\2\u019d\u01ac\7u\2\2\u019e\u019f\7p\2\2\u019f\u01a0"+
		"\7q\2\2\u01a0\u01a1\7v\2\2\u01a1\u01a2\7\"\2\2\u01a2\u01a3\7g\2\2\u01a3"+
		"\u01a4\7z\2\2\u01a4\u01a5\7k\2\2\u01a5\u01a6\7u\2\2\u01a6\u01a7\7v\2\2"+
		"\u01a7\u01ac\7u\2\2\u01a8\u01a9\7c\2\2\u01a9\u01aa\7p\2\2\u01aa\u01ac"+
		"\7{\2\2\u01ab\u0198\3\2\2\2\u01ab\u019e\3\2\2\2\u01ab\u01a8\3\2\2\2\u01ac"+
		"P\3\2\2\2\u01ad\u01ae\7v\2\2\u01ae\u01af\7t\2\2\u01af\u01b0\7w\2\2\u01b0"+
		"\u01b7\7g\2\2\u01b1\u01b2\7h\2\2\u01b2\u01b3\7c\2\2\u01b3\u01b4\7n\2\2"+
		"\u01b4\u01b5\7u\2\2\u01b5\u01b7\7g\2\2\u01b6\u01ad\3\2\2\2\u01b6\u01b1"+
		"\3\2\2\2\u01b7R\3\2\2\2\u01b8\u01c5\t\3\2\2\u01b9\u01ba\7@\2\2\u01ba\u01c5"+
		"\7?\2\2\u01bb\u01bc\7>\2\2\u01bc\u01c5\7?\2\2\u01bd\u01c5\7?\2\2\u01be"+
		"\u01bf\7#\2\2\u01bf\u01c5\7?\2\2\u01c0\u01c1\7n\2\2\u01c1\u01c2\7k\2\2"+
		"\u01c2\u01c3\7m\2\2\u01c3\u01c5\7g\2\2\u01c4\u01b8\3\2\2\2\u01c4\u01b9"+
		"\3\2\2\2\u01c4\u01bb\3\2\2\2\u01c4\u01bd\3\2\2\2\u01c4\u01be\3\2\2\2\u01c4"+
		"\u01c0\3\2\2\2\u01c5T\3\2\2\2\u01c6\u01c8\7/\2\2\u01c7\u01c6\3\2\2\2\u01c7"+
		"\u01c8\3\2\2\2\u01c8\u01ca\3\2\2\2\u01c9\u01cb\5_\60\2\u01ca\u01c9\3\2"+
		"\2\2\u01cb\u01cc\3\2\2\2\u01cc\u01ca\3\2\2\2\u01cc\u01cd\3\2\2\2\u01cd"+
		"V\3\2\2\2\u01ce\u01d0\7/\2\2\u01cf\u01ce\3\2\2\2\u01cf\u01d0\3\2\2\2\u01d0"+
		"\u01d2\3\2\2\2\u01d1\u01d3\5_\60\2\u01d2\u01d1\3\2\2\2\u01d3\u01d4\3\2"+
		"\2\2\u01d4\u01d2\3\2\2\2\u01d4\u01d5\3\2\2\2\u01d5\u01d6\3\2\2\2\u01d6"+
		"\u01d8\7\60\2\2\u01d7\u01d9\5_\60\2\u01d8\u01d7\3\2\2\2\u01d9\u01da\3"+
		"\2\2\2\u01da\u01d8\3\2\2\2\u01da\u01db\3\2\2\2\u01dbX\3\2\2\2\u01dc\u01de"+
		"\5_\60\2\u01dd\u01dc\3\2\2\2\u01de\u01df\3\2\2\2\u01df\u01dd\3\2\2\2\u01df"+
		"\u01e0\3\2\2\2\u01e0\u01e1\3\2\2\2\u01e1\u01e2\t\4\2\2\u01e2Z\3\2\2\2"+
		"\u01e3\u01e5\5_\60\2\u01e4\u01e3\3\2\2\2\u01e5\u01e6\3\2\2\2\u01e6\u01e4"+
		"\3\2\2\2\u01e6\u01e7\3\2\2\2\u01e7\u01e8\3\2\2\2\u01e8\u01e9\t\5\2\2\u01e9"+
		"\\\3\2\2\2\u01ea\u01ec\5_\60\2\u01eb\u01ea\3\2\2\2\u01ec\u01ed\3\2\2\2"+
		"\u01ed\u01eb\3\2\2\2\u01ed\u01ee\3\2\2\2\u01ee\u01ef\3\2\2\2\u01ef\u01f0"+
		"\t\6\2\2\u01f0^\3\2\2\2\u01f1\u01f2\4\62;\2\u01f2`\3\2\2\2\u01f3\u01f7"+
		"\t\7\2\2\u01f4\u01f6\t\b\2\2\u01f5\u01f4\3\2\2\2\u01f6\u01f9\3\2\2\2\u01f7"+
		"\u01f5\3\2\2\2\u01f7\u01f8\3\2\2\2\u01f8b\3\2\2\2\u01f9\u01f7\3\2\2\2"+
		"\u01fa\u01fd\5U+\2\u01fb\u01fd\5a\61\2\u01fc\u01fa\3\2\2\2\u01fc\u01fb"+
		"\3\2\2\2\u01fd\u01fe\3\2\2\2\u01fe\u01ff\7\60\2\2\u01ff\u0204\5a\61\2"+
		"\u0200\u0201\7\60\2\2\u0201\u0203\5a\61\2\u0202\u0200\3\2\2\2\u0203\u0206"+
		"\3\2\2\2\u0204\u0202\3\2\2\2\u0204\u0205\3\2\2\2\u0205d\3\2\2\2\u0206"+
		"\u0204\3\2\2\2\u0207\u0208\7$\2\2\u0208\u0209\5m\67\2\u0209\u020a\7$\2"+
		"\2\u020af\3\2\2\2\u020b\u020c\7^\2\2\u020c\u020d\t\t\2\2\u020dh\3\2\2"+
		"\2\u020e\u020f\t\n\2\2\u020fj\3\2\2\2\u0210\u0211\13\2\2\2\u0211l\3\2"+
		"\2\2\u0212\u0215\5g\64\2\u0213\u0215\n\t\2\2\u0214\u0212\3\2\2\2\u0214"+
		"\u0213\3\2\2\2\u0215\u0218\3\2\2\2\u0216\u0214\3\2\2\2\u0216\u0217\3\2"+
		"\2\2\u0217n\3\2\2\2\u0218\u0216\3\2\2\2\u0219\u021a\7$\2\2\u021ap\3\2"+
		"\2\2\27\2y\u0130\u0178\u0196\u01ab\u01b6\u01c4\u01c7\u01cc\u01cf\u01d4"+
		"\u01da\u01df\u01e6\u01ed\u01f7\u01fc\u0204\u0214\u0216\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}